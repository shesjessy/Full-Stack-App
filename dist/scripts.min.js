let pokemonRepository = (function () {
    let e = [];
    function t(t) {
        e.push(t);
    }
    function n() {
        return e;
    }
    function o(e) {
        return e.charAt(0).toUpperCase() + e.slice(1);
    }
    function i(e) {
        let t = document.querySelector(".pokemon-list"),
            n = document.createElement("li");
        n.classList.add("col-12", "col-sm-6", "col-md-4", "col-lg-3", "mb-4");
        let i = document.createElement("button");
        (i.innerText = o(e.name)),
            i.classList.add(
                "pokemon-button",
                "btn",
                "btn-primary",
                "m-2",
                "btn-block"
            ),
            i.setAttribute("data-toggle", "modal"),
            a(e).then(function () {
                (i.style.backgroundImage = `url(${e.imageUrl})`),
                    (i.style.backgroundSize = "contain"),
                    (i.style.backgroundRepeat = "no-repeat"),
                    (i.style.backgroundPosition = "center"),
                    (i.style.color = "white");
            }),
            i.addEventListener("click", function () {
                l(e);
            }),
            n.appendChild(i),
            t.appendChild(n);
    }
    function a(e) {
        return fetch(e.detailsUrl)
            .then(function (e) {
                return e.json();
            })
            .then(function (t) {
                (e.imageUrl = t.sprites.front_default),
                    (e.height = t.height),
                    (e.weight = t.weight),
                    (e.types = t.types.map((e) => e.type.name)),
                    (e.abilities = t.abilities.map((e) => e.ability.name));
            })
            .catch(function (e) {
                throw (console.error(e), e);
            });
    }
    function l(e) {
        a(e)
            .then(function () {
                r(
                    o(e.name),
                    `Height: ${e.height}m`,
                    `Weight: ${e.weight}kg`,
                    `Type: ${e.types.join(", ")}`,
                    `Abilities: ${e.abilities.join(", ")}`,
                    e.imageUrl
                );
            })
            .catch(function () {
                alert("Failed to load Pok\xe9mon details");
            });
    }
    function r(e, t, n, o, i, a) {
        let l = document.querySelector("#pokemonModalLabel"),
            r = document.querySelector(".modal-body");
        (l.innerText = e), (r.innerHTML = "");
        let c = document.createElement("p");
        c.innerText = t;
        let s = document.createElement("p");
        s.innerText = n;
        let d = document.createElement("p");
        d.innerText = o;
        let m = document.createElement("p");
        m.innerText = i;
        let p = document.createElement("img");
        (p.src = a),
            r.appendChild(c),
            r.appendChild(s),
            r.appendChild(d),
            r.appendChild(m),
            r.appendChild(p),
            $("#pokemonModal").modal("show");
    }
    function c(t) {
        "name-asc" === t
            ? e.sort((e, t) => e.name.localeCompare(t.name))
            : "name-desc" === t
            ? e.sort((e, t) => t.name.localeCompare(e.name))
            : "pokedex" === t &&
              e.sort((e, t) => e.pokedexNumber - t.pokedexNumber),
            s();
    }
    function s() {
        (document.querySelector(".pokemon-list").innerHTML = ""),
            e.forEach(function (e) {
                i(e);
            });
    }
    return (
        document
            .getElementById("sort-options")
            .addEventListener("change", function () {
                c(this.value);
            }),
        {
            add: t,
            getAll: n,
            addListItem: i,
            showDetails: l,
            loadList: function e() {
                return fetch("https://pokeapi.co/api/v2/pokemon/?limit=150")
                    .then(function (e) {
                        return e.json();
                    })
                    .then(function (e) {
                        return Promise.all(
                            e.results.map(function (e, n) {
                                let o = {
                                    name: e.name,
                                    detailsUrl: e.url,
                                    pokedexNumber: n + 1,
                                };
                                return t(o), a(o);
                            })
                        );
                    })
                    .then(function () {
                        s();
                    })
                    .catch(function (e) {
                        alert("Failed to load Pok\xe9mon data"),
                            console.error(e);
                    });
            },
            loadDetails: a,
            showModal: r,
            sortPokemon: c,
            renderPokemonList: s,
        }
    );
})();
pokemonRepository.loadList().then(function () {
    pokemonRepository.getAll().forEach(function (e) {
        pokemonRepository.addListItem(e);
    });
});
